{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\ReactNartive\\\\Lista React Native\\\\source-expo\\\\app\\\\navigation\\\\index.js\";\nimport React, { useEffect } from \"react\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { AppearanceProvider, useColorScheme } from \"react-native-appearance\";\nimport { useTheme, BaseSetting } from \"@config\";\nimport i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport { useSelector } from \"react-redux\";\nimport { languageSelect, designSelect } from \"@selectors\";\nimport Main from \"app/navigation/main\";\nimport Loading from \"@screens/Loading\";\nimport Filter from \"@screens/Filter\";\nimport PickerScreen from \"@screens/PickerScreen\";\nimport SearchHistory from \"@screens/SearchHistory\";\nimport SearchHistoryRealEstate from \"@screens/SearchHistoryRealEstate\";\nimport SearchHistoryEvent from \"@screens/SearchHistoryEvent\";\nimport SearchHistoryFood from \"@screens/SearchHistoryFood\";\nimport PreviewImage from \"@screens/PreviewImage\";\nimport SelectDarkOption from \"@screens/SelectDarkOption\";\nimport SelectFontOption from \"@screens/SelectFontOption\";\nimport AlertScreen from \"@screens/Alert\";\nimport ChooseBusiness from \"@screens/ChooseBusiness\";\nimport SignIn from \"@screens/SignIn\";\nimport SignUp from \"@screens/SignUp\";\nimport ResetPassword from \"@screens/ResetPassword\";\nimport ProductDetail from \"@screens/ProductDetail\";\nimport ProductDetailRealEsate from \"@screens/ProductDetailRealEsate\";\nimport ProductDetailEvent from \"@screens/ProductDetailEvent\";\nimport ProductDetailFood from \"@screens/ProductDetailFood\";\nimport Notification from \"@screens/Notification\";\nvar RootStack = createStackNavigator();\nexport default function Navigator() {\n  var language = useSelector(languageSelect);\n  var design = useSelector(designSelect);\n\n  var _useTheme = useTheme(),\n      theme = _useTheme.theme,\n      colors = _useTheme.colors;\n\n  var isDarkMode = useColorScheme() === \"dark\";\n  useEffect(function () {\n    i18n.use(initReactI18next).init({\n      resources: BaseSetting.resourcesLanguage,\n      lng: language != null ? language : BaseSetting.defaultLanguage,\n      fallbackLng: BaseSetting.defaultLanguage\n    });\n\n    if (Platform.OS === \"android\") {\n      StatusBar.setBackgroundColor(colors.primary, true);\n    }\n\n    StatusBar.setBarStyle(isDarkMode ? \"light-content\" : \"dark-content\", true);\n  }, []);\n\n  var forFade = function forFade(_ref) {\n    var current = _ref.current,\n        closing = _ref.closing;\n    return {\n      cardStyle: {\n        opacity: current.progress\n      }\n    };\n  };\n\n  var exportSearchHistory = function exportSearchHistory(design) {\n    switch (design) {\n      case \"real_estate\":\n        return SearchHistoryRealEstate;\n\n      case \"event\":\n        return SearchHistoryEvent;\n\n      case \"food\":\n        return SearchHistoryFood;\n\n      default:\n        return SearchHistory;\n    }\n  };\n\n  var exportProductDetail = function exportProductDetail(design) {\n    switch (design) {\n      case \"real_estate\":\n        return ProductDetailRealEsate;\n\n      case \"event\":\n        return ProductDetailEvent;\n\n      case \"food\":\n        return ProductDetailFood;\n\n      default:\n        return ProductDetail;\n    }\n  };\n\n  return React.createElement(AppearanceProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, React.createElement(RootStack.Navigator, {\n    mode: \"modal\",\n    screenOptions: {\n      headerShown: false\n    },\n    initialRouteName: \"Loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, React.createElement(RootStack.Screen, {\n    name: \"Loading\",\n    component: Loading,\n    options: {\n      gestureEnabled: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }), React.createElement(RootStack.Screen, {\n    name: \"SignIn\",\n    component: SignIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }), React.createElement(RootStack.Screen, {\n    name: \"SignUp\",\n    component: SignUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }), React.createElement(RootStack.Screen, {\n    name: \"ResetPassword\",\n    component: ResetPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }), React.createElement(RootStack.Screen, {\n    name: \"Alert\",\n    component: AlertScreen,\n    options: {\n      cardStyleInterpolator: forFade,\n      cardStyle: {\n        backgroundColor: \"rgba(0, 0, 0, 0.7)\"\n      },\n      gestureEnabled: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }), React.createElement(RootStack.Screen, {\n    name: \"ChooseBusiness\",\n    component: ChooseBusiness,\n    options: {\n      cardStyleInterpolator: forFade,\n      cardStyle: {\n        backgroundColor: \"rgba(0, 0, 0, 0.7)\"\n      },\n      gestureEnabled: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }), React.createElement(RootStack.Screen, {\n    name: \"Main\",\n    component: Main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }), React.createElement(RootStack.Screen, {\n    name: \"Filter\",\n    component: Filter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }), React.createElement(RootStack.Screen, {\n    name: \"PickerScreen\",\n    component: PickerScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }), React.createElement(RootStack.Screen, {\n    name: \"Notification\",\n    component: Notification,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }), React.createElement(RootStack.Screen, {\n    name: \"SearchHistory\",\n    component: exportSearchHistory(design),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }), React.createElement(RootStack.Screen, {\n    name: \"ProductDetail\",\n    component: exportProductDetail(design),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }), React.createElement(RootStack.Screen, {\n    name: \"PreviewImage\",\n    component: PreviewImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }), React.createElement(RootStack.Screen, {\n    name: \"SelectDarkOption\",\n    component: SelectDarkOption,\n    gestureEnabled: false,\n    options: {\n      cardStyleInterpolator: forFade,\n      cardStyle: {\n        backgroundColor: \"rgba(0, 0, 0, 0.5)\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }), React.createElement(RootStack.Screen, {\n    name: \"SelectFontOption\",\n    component: SelectFontOption,\n    gestureEnabled: false,\n    options: {\n      cardStyleInterpolator: forFade,\n      cardStyle: {\n        backgroundColor: \"rgba(0, 0, 0, 0.5)\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["E:/Projects/ReactNartive/Lista React Native/source-expo/app/navigation/index.js"],"names":["React","useEffect","NavigationContainer","createStackNavigator","AppearanceProvider","useColorScheme","useTheme","BaseSetting","i18n","initReactI18next","useSelector","languageSelect","designSelect","Main","Loading","Filter","PickerScreen","SearchHistory","SearchHistoryRealEstate","SearchHistoryEvent","SearchHistoryFood","PreviewImage","SelectDarkOption","SelectFontOption","AlertScreen","ChooseBusiness","SignIn","SignUp","ResetPassword","ProductDetail","ProductDetailRealEsate","ProductDetailEvent","ProductDetailFood","Notification","RootStack","Navigator","language","design","theme","colors","isDarkMode","use","init","resources","resourcesLanguage","lng","defaultLanguage","fallbackLng","Platform","OS","StatusBar","setBackgroundColor","primary","setBarStyle","forFade","current","closing","cardStyle","opacity","progress","exportSearchHistory","exportProductDetail","headerShown","gestureEnabled","cardStyleInterpolator","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,kBAAT,EAA6BC,cAA7B,QAAmD,yBAAnD;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,SAAtC;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,YAA7C;AAGA,OAAOC,IAAP,MAAiB,qBAAjB;AAEA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,uBAAP,MAAoC,kCAApC;AACA,OAAOC,kBAAP,MAA+B,6BAA/B;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,sBAAP,MAAmC,iCAAnC;AACA,OAAOC,kBAAP,MAA+B,6BAA/B;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AAEA,IAAMC,SAAS,GAAG/B,oBAAoB,EAAtC;AAEA,eAAe,SAASgC,SAAT,GAAqB;AAClC,MAAMC,QAAQ,GAAG1B,WAAW,CAACC,cAAD,CAA5B;AACA,MAAM0B,MAAM,GAAG3B,WAAW,CAACE,YAAD,CAA1B;;AAEA,kBAA0BN,QAAQ,EAAlC;AAAA,MAAQgC,KAAR,aAAQA,KAAR;AAAA,MAAeC,MAAf,aAAeA,MAAf;;AACA,MAAMC,UAAU,GAAGnC,cAAc,OAAO,MAAxC;AAEAJ,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,IAAI,CAACiC,GAAL,CAAShC,gBAAT,EAA2BiC,IAA3B,CAAgC;AAC9BC,MAAAA,SAAS,EAAEpC,WAAW,CAACqC,iBADO;AAE9BC,MAAAA,GAAG,EAAET,QAAF,WAAEA,QAAF,GAAc7B,WAAW,CAACuC,eAFC;AAG9BC,MAAAA,WAAW,EAAExC,WAAW,CAACuC;AAHK,KAAhC;;AAKA,QAAIE,QAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;AAC7BC,MAAAA,SAAS,CAACC,kBAAV,CAA6BZ,MAAM,CAACa,OAApC,EAA6C,IAA7C;AACD;;AACDF,IAAAA,SAAS,CAACG,WAAV,CAAsBb,UAAU,GAAG,eAAH,GAAqB,cAArD,EAAqE,IAArE;AACD,GAVQ,EAUN,EAVM,CAAT;;AAgBA,MAAMc,OAAO,GAAG,SAAVA,OAAU;AAAA,QAAGC,OAAH,QAAGA,OAAH;AAAA,QAAYC,OAAZ,QAAYA,OAAZ;AAAA,WAA2B;AACzCC,MAAAA,SAAS,EAAE;AACTC,QAAAA,OAAO,EAAEH,OAAO,CAACI;AADR;AAD8B,KAA3B;AAAA,GAAhB;;AAWA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACvB,MAAD,EAAY;AACtC,YAAQA,MAAR;AACE,WAAK,aAAL;AACE,eAAOnB,uBAAP;;AACF,WAAK,OAAL;AACE,eAAOC,kBAAP;;AACF,WAAK,MAAL;AACE,eAAOC,iBAAP;;AACF;AACE,eAAOH,aAAP;AARJ;AAUD,GAXD;;AAkBA,MAAM4C,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACxB,MAAD,EAAY;AACtC,YAAQA,MAAR;AACE,WAAK,aAAL;AACE,eAAOP,sBAAP;;AACF,WAAK,OAAL;AACE,eAAOC,kBAAP;;AACF,WAAK,MAAL;AACE,eAAOC,iBAAP;;AACF;AACE,eAAOH,aAAP;AARJ;AAUD,GAXD;;AAaA,SACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAqB,IAAA,KAAK,EAAES,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD,CAAW,SAAX;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,aAAa,EAAE;AACbwB,MAAAA,WAAW,EAAE;AADA,KAFjB;AAKE,IAAA,gBAAgB,EAAC,SALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,SAAD,CAAW,MAAX;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,SAAS,EAAEhD,OAFb;AAGE,IAAA,OAAO,EAAE;AAAEiD,MAAAA,cAAc,EAAE;AAAlB,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAYE,oBAAC,SAAD,CAAW,MAAX;AAAkB,IAAA,IAAI,EAAC,QAAvB;AAAgC,IAAA,SAAS,EAAErC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAaE,oBAAC,SAAD,CAAW,MAAX;AAAkB,IAAA,IAAI,EAAC,QAAvB;AAAgC,IAAA,SAAS,EAAEC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAcE,oBAAC,SAAD,CAAW,MAAX;AAAkB,IAAA,IAAI,EAAC,eAAvB;AAAuC,IAAA,SAAS,EAAEC,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAeE,oBAAC,SAAD,CAAW,MAAX;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAEJ,WAFb;AAGE,IAAA,OAAO,EAAE;AACPwC,MAAAA,qBAAqB,EAAEV,OADhB;AAEPG,MAAAA,SAAS,EAAE;AAAEQ,QAAAA,eAAe,EAAE;AAAnB,OAFJ;AAGPF,MAAAA,cAAc,EAAE;AAHT,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAwBE,oBAAC,SAAD,CAAW,MAAX;AACE,IAAA,IAAI,EAAC,gBADP;AAEE,IAAA,SAAS,EAAEtC,cAFb;AAGE,IAAA,OAAO,EAAE;AACPuC,MAAAA,qBAAqB,EAAEV,OADhB;AAEPG,MAAAA,SAAS,EAAE;AAAEQ,QAAAA,eAAe,EAAE;AAAnB,OAFJ;AAGPF,MAAAA,cAAc,EAAE;AAHT,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBF,EAiCE,oBAAC,SAAD,CAAW,MAAX;AAAkB,IAAA,IAAI,EAAC,MAAvB;AAA8B,IAAA,SAAS,EAAElD,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCF,EAkCE,oBAAC,SAAD,CAAW,MAAX;AAAkB,IAAA,IAAI,EAAC,QAAvB;AAAgC,IAAA,SAAS,EAAEE,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCF,EAmCE,oBAAC,SAAD,CAAW,MAAX;AAAkB,IAAA,IAAI,EAAC,cAAvB;AAAsC,IAAA,SAAS,EAAEC,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnCF,EAoCE,oBAAC,SAAD,CAAW,MAAX;AAAkB,IAAA,IAAI,EAAC,cAAvB;AAAsC,IAAA,SAAS,EAAEiB,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApCF,EAqCE,oBAAC,SAAD,CAAW,MAAX;AACE,IAAA,IAAI,EAAC,eADP;AAEE,IAAA,SAAS,EAAE2B,mBAAmB,CAACvB,MAAD,CAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArCF,EAyCE,oBAAC,SAAD,CAAW,MAAX;AACE,IAAA,IAAI,EAAC,eADP;AAEE,IAAA,SAAS,EAAEwB,mBAAmB,CAACxB,MAAD,CAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzCF,EA6CE,oBAAC,SAAD,CAAW,MAAX;AAAkB,IAAA,IAAI,EAAC,cAAvB;AAAsC,IAAA,SAAS,EAAEhB,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7CF,EA8CE,oBAAC,SAAD,CAAW,MAAX;AACE,IAAA,IAAI,EAAC,kBADP;AAEE,IAAA,SAAS,EAAEC,gBAFb;AAGE,IAAA,cAAc,EAAE,KAHlB;AAIE,IAAA,OAAO,EAAE;AACP0C,MAAAA,qBAAqB,EAAEV,OADhB;AAEPG,MAAAA,SAAS,EAAE;AAAEQ,QAAAA,eAAe,EAAE;AAAnB;AAFJ,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9CF,EAuDE,oBAAC,SAAD,CAAW,MAAX;AACE,IAAA,IAAI,EAAC,kBADP;AAEE,IAAA,SAAS,EAAE1C,gBAFb;AAGE,IAAA,cAAc,EAAE,KAHlB;AAIE,IAAA,OAAO,EAAE;AACPyC,MAAAA,qBAAqB,EAAEV,OADhB;AAEPG,MAAAA,SAAS,EAAE;AAAEQ,QAAAA,eAAe,EAAE;AAAnB;AAFJ,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvDF,CADF,CADF,CADF;AAuED","sourcesContent":["import React, { useEffect } from \"react\";\nimport { StatusBar, Platform } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { AppearanceProvider, useColorScheme } from \"react-native-appearance\";\nimport { useTheme, BaseSetting } from \"@config\";\nimport i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport { useSelector } from \"react-redux\";\nimport { languageSelect, designSelect } from \"@selectors\";\n\n/* Main Stack Navigator */\nimport Main from \"app/navigation/main\";\n/* Modal Screen only affect iOS */\nimport Loading from \"@screens/Loading\";\nimport Filter from \"@screens/Filter\";\nimport PickerScreen from \"@screens/PickerScreen\";\nimport SearchHistory from \"@screens/SearchHistory\";\nimport SearchHistoryRealEstate from \"@screens/SearchHistoryRealEstate\";\nimport SearchHistoryEvent from \"@screens/SearchHistoryEvent\";\nimport SearchHistoryFood from \"@screens/SearchHistoryFood\";\nimport PreviewImage from \"@screens/PreviewImage\";\nimport SelectDarkOption from \"@screens/SelectDarkOption\";\nimport SelectFontOption from \"@screens/SelectFontOption\";\nimport AlertScreen from \"@screens/Alert\";\nimport ChooseBusiness from \"@screens/ChooseBusiness\";\nimport SignIn from \"@screens/SignIn\";\nimport SignUp from \"@screens/SignUp\";\nimport ResetPassword from \"@screens/ResetPassword\";\nimport ProductDetail from \"@screens/ProductDetail\";\nimport ProductDetailRealEsate from \"@screens/ProductDetailRealEsate\";\nimport ProductDetailEvent from \"@screens/ProductDetailEvent\";\nimport ProductDetailFood from \"@screens/ProductDetailFood\";\nimport Notification from \"@screens/Notification\";\n\nconst RootStack = createStackNavigator();\n\nexport default function Navigator() {\n  const language = useSelector(languageSelect);\n  const design = useSelector(designSelect);\n\n  const { theme, colors } = useTheme();\n  const isDarkMode = useColorScheme() === \"dark\";\n\n  useEffect(() => {\n    i18n.use(initReactI18next).init({\n      resources: BaseSetting.resourcesLanguage,\n      lng: language ?? BaseSetting.defaultLanguage,\n      fallbackLng: BaseSetting.defaultLanguage,\n    });\n    if (Platform.OS === \"android\") {\n      StatusBar.setBackgroundColor(colors.primary, true);\n    }\n    StatusBar.setBarStyle(isDarkMode ? \"light-content\" : \"dark-content\", true);\n  }, []);\n\n  /**\n   * fade animate trasition navigation\n   * @param {*} {current, closing}\n   */\n  const forFade = ({ current, closing }) => ({\n    cardStyle: {\n      opacity: current.progress,\n    },\n  });\n\n  /**\n   * Main follow return SearchHistory design you are selected\n   * @param {*} design  ['basic', 'real_estate','event', 'food']\n   * @returns\n   */\n  const exportSearchHistory = (design) => {\n    switch (design) {\n      case \"real_estate\":\n        return SearchHistoryRealEstate;\n      case \"event\":\n        return SearchHistoryEvent;\n      case \"food\":\n        return SearchHistoryFood;\n      default:\n        return SearchHistory;\n    }\n  };\n\n  /**\n   * Main follow return  Product detail design you are selected\n   * @param {*} design  ['basic', 'real_estate','event', 'food']\n   * @returns\n   */\n  const exportProductDetail = (design) => {\n    switch (design) {\n      case \"real_estate\":\n        return ProductDetailRealEsate;\n      case \"event\":\n        return ProductDetailEvent;\n      case \"food\":\n        return ProductDetailFood;\n      default:\n        return ProductDetail;\n    }\n  };\n\n  return (\n    <AppearanceProvider>\n      <NavigationContainer theme={theme}>\n        <RootStack.Navigator\n          mode=\"modal\"\n          screenOptions={{\n            headerShown: false,\n          }}\n          initialRouteName=\"Loading\"\n        >\n          <RootStack.Screen\n            name=\"Loading\"\n            component={Loading}\n            options={{ gestureEnabled: false }}\n          />\n          <RootStack.Screen name=\"SignIn\" component={SignIn} />\n          <RootStack.Screen name=\"SignUp\" component={SignUp} />\n          <RootStack.Screen name=\"ResetPassword\" component={ResetPassword} />\n          <RootStack.Screen\n            name=\"Alert\"\n            component={AlertScreen}\n            options={{\n              cardStyleInterpolator: forFade,\n              cardStyle: { backgroundColor: \"rgba(0, 0, 0, 0.7)\" },\n              gestureEnabled: false,\n            }}\n          />\n          <RootStack.Screen\n            name=\"ChooseBusiness\"\n            component={ChooseBusiness}\n            options={{\n              cardStyleInterpolator: forFade,\n              cardStyle: { backgroundColor: \"rgba(0, 0, 0, 0.7)\" },\n              gestureEnabled: false,\n            }}\n          />\n          <RootStack.Screen name=\"Main\" component={Main} />\n          <RootStack.Screen name=\"Filter\" component={Filter} />\n          <RootStack.Screen name=\"PickerScreen\" component={PickerScreen} />\n          <RootStack.Screen name=\"Notification\" component={Notification} />\n          <RootStack.Screen\n            name=\"SearchHistory\"\n            component={exportSearchHistory(design)}\n          />\n          <RootStack.Screen\n            name=\"ProductDetail\"\n            component={exportProductDetail(design)}\n          />\n          <RootStack.Screen name=\"PreviewImage\" component={PreviewImage} />\n          <RootStack.Screen\n            name=\"SelectDarkOption\"\n            component={SelectDarkOption}\n            gestureEnabled={false}\n            options={{\n              cardStyleInterpolator: forFade,\n              cardStyle: { backgroundColor: \"rgba(0, 0, 0, 0.5)\" },\n            }}\n          />\n          <RootStack.Screen\n            name=\"SelectFontOption\"\n            component={SelectFontOption}\n            gestureEnabled={false}\n            options={{\n              cardStyleInterpolator: forFade,\n              cardStyle: { backgroundColor: \"rgba(0, 0, 0, 0.5)\" },\n            }}\n          />\n        </RootStack.Navigator>\n      </NavigationContainer>\n    </AppearanceProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}